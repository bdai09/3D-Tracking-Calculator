{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","C_Users_bo_dai_Desktop_school_work_IT_MUKE_Calculator_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_bo_dai_Desktop_school_work_IT_MUKE_Calculator_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_bo_dai_Desktop_school_work_IT_MUKE_Calculator_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","valNew","valOld","formula","beforeIs","offsetX","offsetY","friction","_mouseMove","bind","C_Users_bo_dai_Desktop_school_work_IT_MUKE_Calculator_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","reachMax","handleOperators","handleEvaluate","cleanUp","handleDecimal","handleNumbers","changeSize","addEventListener","removeEventListener","e","followX","innerWidth","clientX","followY","innerHeight","clientY","x","y","setState","_this2","setTimeout","num","length","test","target","value","i","indexOf","slice","expression","replace","answer","Math","round","eval","toString","formulaScreen","parseInt","style","fontSize","scrollWidth","clientWidth","offset","transform","concat","react__WEBPACK_IMPORTED_MODULE_6___default","className","id","onClick","width","background","fontFamily","position","height","bottom","Component"],"mappings":"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","file":"static/js/main.63b843ce.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      valNew: '0',\r\n      valOld: '0',\r\n      formula: '',\r\n      beforeIs:'', //trace previous click is on which category\r\n      offsetX:'',\r\n      offsetY:'',\r\n      friction:1/32\r\n    }\r\n    this._mouseMove=this._mouseMove.bind(this);\r\n    this.reachMax = this.reachMax.bind(this);\r\n    this.handleOperators = this.handleOperators.bind(this);\r\n    this.handleEvaluate = this.handleEvaluate.bind(this);\r\n    this.cleanUp = this.cleanUp.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleNumbers = this.handleNumbers.bind(this);\r\n    this.changeSize=this.changeSize.bind(this);\r\n  }\r\n  //3d part\r\n  componentDidMount() {\r\n    document.addEventListener('mousemove', this._mouseMove);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousemove', this._mouseMove);\r\n  }\r\n  _mouseMove(e) {\r\n    let followX = (window.innerWidth / 2 - e.clientX);\r\n    let followY = (window.innerHeight / 2 - e.clientY);\r\n\r\n    let x = 0,\r\n        y = 0;\r\n    x +=( (-followX - x) * this.state.friction);\r\n    y += (followY - y) * this.state.friction;\r\n    this.setState({\r\n      offsetX: x,\r\n      offsetY: y\r\n    });\r\n  }\r\n\r\n  cleanUp() {\r\n    this.setState({\r\n      valNew: '0',\r\n      valOld: '0',\r\n      formula: '',\r\n      beforeIs:''\r\n    });\r\n  }\r\n  reachMax() {\r\n    this.setState({\r\n      valNew: 'Reach Limit',\r\n      valOld: this.state.valNew,\r\n      beforeIs:''\r\n    });\r\n    setTimeout(() => this.setState({valNew: this.state.valOld, beforeIs:'num'}), 1000);\r\n  }\r\n\r\n  handleNumbers(num) {\r\n    if (this.state.valNew===\"Reach Limit\") {\r\n      this.setState({beforeIs:''})\r\n    }else {\r\n        if(this.state.valNew.length > 21) {\r\n             this.reachMax();\r\n        }else {\r\n            if(this.state.beforeIs==='num'){\r\n               this.setState({\r\n               valNew:  /([x/+‑]0)$/.test(this.state.formula) ?this.state.valNew : (this.state.valNew==='0'?num.target.value:(this.state.valNew+num.target.value)),\r\n               formula: /([x/+‑]0)$/.test(this.state.formula) ?this.state.formula : (this.state.formula +num.target.value),\r\n               beforeIs:'num'\r\n               });\r\n             }\r\n            if(this.state.beforeIs==='operator'||this.state.beforeIs==='decimal'){\r\n                  this.setState({\r\n                  valNew: num.target.value,\r\n                  formula: this.state.formula+num.target.value,\r\n                  beforeIs:'num' \r\n                 });\r\n             }\r\n           if(this.state.beforeIs===''&&num.target.value!=='0'){\r\n               this.setState({\r\n               valNew: num.target.value,\r\n               formula: num.target.value,\r\n               beforeIs:'num'\r\n               });\r\n             }\r\n             if(this.state.beforeIs===''&&num.target.value==='0'){\r\n              this.setState({\r\n              valNew: '0',\r\n              formula: '',\r\n              beforeIs:'num'\r\n              });\r\n            }\r\n          \r\n    }\r\n  }\r\n}\r\n   \r\n  handleOperators(i) { \r\n    if (this.state.valNew!==\"Reach Limit\") {\r\n      switch(this.state.beforeIs){\r\n       case '':\r\n        this.state.formula.indexOf('=')!==-1? \r\n        this.setState({ //if has calculation body and =\r\n          valNew: i.target.value,\r\n          formula: this.state.formula.slice(this.state.formula.indexOf('=')+1)+i.target.value,\r\n          beforeIs:'operator'\r\n          }):\r\n        this.setState({ //if press +-*/ without enter num first\r\n        valNew: '0',\r\n        formula: '',\r\n        beforeIs:''\r\n        });\r\n        break;\r\n    \r\n      case 'operator':\r\n        this.setState({\r\n        valNew: this.state.valNew,\r\n        formula: this.state.formula,\r\n        beforeIs:'operator'\r\n        });\r\n        break;\r\n      case 'decimal':\r\n        this.setState({\r\n        valNew: i.target.value,\r\n        formula: this.state.formula.slice(0, -1)+i.target.value,\r\n        beforeIs:'operator'\r\n        });\r\n        break;\r\n      case 'num':\r\n        this.setState({\r\n        valNew: i.target.value,\r\n        formula: this.state.formula+i.target.value,\r\n        beforeIs:'operator'\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  handleEvaluate(){\r\n    if (this.state.valNew!==\"Reach Limit\") {\r\n      let expression = this.state.formula;\r\n      if (this.state.beforeIs==='operator'||this.state.beforeIs==='decimal') \r\n      { expression = expression.slice(0, -1);}\r\n      let i=expression.indexOf('=');\r\n      if(i!==-1) expression = expression.slice(0,i);\r\n        expression = expression.replace(/x/g, \"*\").replace(/‑/g, \"-\");\r\n        let answer = (Math.round(1000000000000 * eval(expression)) / 1000000000000).toString();\r\n        //deal with formula overflow, only keep result\r\n        if(expression.length+answer.length>20){\r\n          this.setState({\r\n            valNew: answer,\r\n            formula:answer,\r\n            beforeIs: 'num'\r\n          });\r\n        }else{\r\n          this.setState({\r\n            valNew: answer,\r\n            formula: expression.replace(/\\*/g, '⋅').replace(/-/g, '‑') + '='+ answer,\r\n            beforeIs: ''\r\n          });\r\n        }   \r\n    }\r\n  }\r\n    \r\n  handleDecimal() {\r\n    if (this.state.valNew!==\"Reach Limit\") {\r\n      if (this.state.valNew.length > 21) {\r\n        this.reachMax();\r\n      } else {\r\n        switch(this.state.beforeIs){\r\n        case 'num':\r\n          this.setState({\r\n            valNew: '.',\r\n            formula: this.state.formula + '.',\r\n            beforeIs:'decimal'\r\n          }); \r\n          break;\r\n        case 'decimal':\r\n          this.setState({\r\n            valNew: '.',\r\n            formula: this.state.formula,\r\n            beforeIs:'decimal'\r\n          }); \r\n          break;\r\n        case 'operator':\r\n          this.setState({\r\n            valNew: this.state.valNew,\r\n            formula: this.state.formula,\r\n            beforeIs:'operator'\r\n          }); \r\n          break;\r\n        case '':\r\n          this.setState({\r\n            valNew: '0.',\r\n            formula: '0.',\r\n            beforeIs:'decimal'\r\n          }); \r\n        }\r\n      }\r\n  }}\r\n  \r\nchangeSize(){  //deal with re-size when formula is too long, resize font\r\n  if(this.state.formula!==''){\r\nlet formulaScreen=document.getElementById('formulaScreen');\r\nlet currSize=parseInt(formulaScreen.style.fontSize.replace('px', ''));\r\nformulaScreen.style.fontSize = \"30px\"\r\nlet fontSize = parseInt(formulaScreen.style.fontSize.replace('px', ''));\r\nfor (let i = fontSize; i >= 0; i--) {\r\n  let overflow=(formulaScreen.scrollWidth-10 > formulaScreen.clientWidth);\r\n  if (overflow) {\r\n    fontSize--;\r\n    formulaScreen.style.fontSize = fontSize + \"px\";\r\n  }\r\n}\r\n}}\r\n\r\n  render() {\r\n    let offset = {\r\n      transform: `translate(-50%, -50%) perspective(600px)\r\n                  rotateY(${this.state.offsetX}deg)\r\n                  rotateX(${this.state.offsetY}deg)`\r\n                 }\r\n     this.changeSize();\r\n    return (\r\n      <div className='wrapper' style={offset}>\r\n      <div className=\"shape\"></div>\r\n        <div className='shape2'>\r\n          <div id=\"formulaScreen\" className=\"formulaScreen\">                  \r\n          {this.state.formula} </div>\r\n          <div className=\"outputScreen\"> {this.state.valNew} </div>\r\n          <div>\r\n        <button value='AC' onClick={this.cleanUp} style={{width:160, background: '#cccdce'}}>AC</button>\r\n        <button value='/'  onClick={this.handleOperators} style={{background: '#cccdce'}}>/</button>\r\n        <button value='x'  onClick={this.handleOperators} style={{background: '#cccdce',fontFamily:'Sniglet'}}>x</button>\r\n        <button value='7'  onClick={this.handleNumbers} >7</button>\r\n        <button value='8'  onClick={this.handleNumbers} >8</button>\r\n        <button value='9'  onClick={this.handleNumbers} >9</button>\r\n        <button value='‑'  onClick={this.handleOperators} style={{background: '#cccdce'}}>-</button>\r\n        <button value='4'  onClick={this.handleNumbers} >4</button>\r\n        <button value='5'  onClick={this.handleNumbers} >5</button>\r\n        <button value='6'  onClick={this.handleNumbers} >6</button>\r\n        <button value='+'  onClick={this.handleOperators} style={{background: '#cccdce'}}>+</button>\r\n        <button value='1'  onClick={this.handleNumbers} >1</button>\r\n        <button value='2'  onClick={this.handleNumbers} >2</button>\r\n        <button value='3'  onClick={this.handleNumbers} >3</button>\r\n        <button value='='  onClick={this.handleEvaluate} style={{background: '#cccdce',position: 'absolute',height: 130, bottom: 0}}>=</button>\r\n        <button value='0'  onClick={this.handleNumbers} style={{width:160}}>0</button>\r\n        <button value='.'  onClick={this.handleDecimal} style={{width:78}}>.</button>     \r\n      \r\n      \r\n      </div>\r\n        </div><p>Move your mouse around</p>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}