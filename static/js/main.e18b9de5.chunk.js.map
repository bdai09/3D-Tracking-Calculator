{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","C_Users_bo_dai_Desktop_school_work_IT_MUKE_Calculator_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_bo_dai_Desktop_school_work_IT_MUKE_Calculator_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_bo_dai_Desktop_school_work_IT_MUKE_Calculator_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","valNew","valOld","formula","beforeIs","reachMax","bind","C_Users_bo_dai_Desktop_school_work_IT_MUKE_Calculator_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleOperators","handleEvaluate","cleanUp","handleDecimal","handleNumbers","setState","_this2","setTimeout","num","length","test","target","value","i","indexOf","slice","expression","replace","answer","Math","round","eval","toString","react__WEBPACK_IMPORTED_MODULE_6___default","className","onClick","style","width","background","position","height","bottom","Component"],"mappings":"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","file":"static/js/main.e18b9de5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport './App.scss';\n \nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valNew: '0',\n      valOld: '0',\n      formula: '',\n      beforeIs:''\n    }\n    this.reachMax = this.reachMax.bind(this);\n    this.handleOperators = this.handleOperators.bind(this);\n    this.handleEvaluate = this.handleEvaluate.bind(this);\n    this.cleanUp = this.cleanUp.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleNumbers = this.handleNumbers.bind(this);\n  }\n  cleanUp() {\n    this.setState({\n      valNew: '0',\n      valOld: '0',\n      formula: '',\n      beforeIs:''\n    });\n  }\n  reachMax() {\n    this.setState({\n      valNew: 'Reach Limit',\n      valOld: this.state.valNew,\n      beforeIs:''\n    });\n    setTimeout(() => this.setState({valNew: this.state.valOld, beforeIs:'num'}), 1000);\n  }\n\n  handleNumbers(num) {\n    if (this.state.valNew===\"Reach Limit\") {\n      this.setState({beforeIs:''})\n    }else {\n        if(this.state.valNew.length > 21) {\n             this.reachMax();\n        }else {\n            if(this.state.beforeIs==='num'){\n               this.setState({\n               valNew:  /([x/+‑]0)$/.test(this.state.formula) ?this.state.valNew : (this.state.valNew==='0'?num.target.value:(this.state.valNew+num.target.value)),\n               formula: /([x/+‑]0)$/.test(this.state.formula) ?this.state.formula : (this.state.formula +num.target.value),\n               beforeIs:'num'\n               });\n             }\n            if(this.state.beforeIs==='operator'||this.state.beforeIs==='decimal'){\n                  this.setState({\n                  valNew: num.target.value,\n                  formula: this.state.formula+num.target.value,\n                  beforeIs:'num' \n                 });\n             }\n           if(this.state.beforeIs===''&&num.target.value!=='0'){\n               this.setState({\n               valNew: num.target.value,\n               formula: num.target.value,\n               beforeIs:'num'\n               });\n             }\n             if(this.state.beforeIs===''&&num.target.value==='0'){\n              this.setState({\n              valNew: '0',\n              formula: '',\n              beforeIs:'num'\n              });\n            }\n          \n    }\n  }}\n   \n  handleOperators(i) { \n    if (this.state.valNew!==\"Reach Limit\") {\n      switch(this.state.beforeIs){\n       case '':\n        this.state.formula.indexOf('=')!==-1? \n        this.setState({\n          valNew: i.target.value,\n          formula: this.state.formula.slice(this.state.formula.indexOf('=')+1)+i.target.value,\n          beforeIs:'operator'\n          }):\n        this.setState({\n        valNew: '0',\n        formula: '',\n        beforeIs:''\n        });\n        break;\n    \n      case 'operator':\n        this.setState({\n        valNew: this.state.valNew,\n        formula: this.state.formula,\n        beforeIs:'operator'\n        });\n        break;\n      case 'decimal':\n        this.setState({\n        valNew: i.target.value,\n        formula: this.state.formula.slice(0, -1)+i.target.value,\n        beforeIs:'operator'\n        });\n        break;\n      case 'num':\n        this.setState({\n        valNew: i.target.value,\n        formula: this.state.formula+i.target.value,\n        beforeIs:'operator'\n        });\n      }\n    }\n  }\n  \n  handleEvaluate(){\n    if (this.state.valNew!==\"Reach Limit\") {\n      let expression = this.state.formula;\n      if (this.state.beforeIs==='operator'||this.state.beforeIs==='decimal') \n      { expression = expression.slice(0, -1);}\n      let i=expression.indexOf('=');\n      if(i!==-1) expression = expression.slice(0,i);\n        expression = expression.replace(/x/g, \"*\").replace(/‑/g, \"-\");\n        let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\n        this.setState({\n        valNew: answer.toString(),\n        formula: expression.replace(/\\*/g, '⋅').replace(/-/g, '‑') + '=' + answer,\n        beforeIs: ''\n      });\n    }\n  }\n    \n  handleDecimal() {\n    if (this.state.valNew!==\"Reach Limit\") {\n      if (this.state.valNew.length > 21) {\n        this.reachMax();\n      } else {\n        switch(this.state.beforeIs){\n        case 'num':\n          this.setState({\n            valNew: '.',\n            formula: this.state.formula + '.',\n            beforeIs:'decimal'\n          }); \n          break;\n        case 'decimal':\n          this.setState({\n            valNew: '.',\n            formula: this.state.formula,\n            beforeIs:'decimal'\n          }); \n          break;\n        case 'operator':\n          this.setState({\n            valNew: this.state.valNew,\n            formula: this.state.formula,\n            beforeIs:'operator'\n          }); \n          break;\n        case '':\n          this.setState({\n            valNew: '0.',\n            formula: '0.',\n            beforeIs:'decimal'\n          }); \n        }\n      }\n  }}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='App-body'>\n          <div className=\"formulaScreen\">{this.state.formula} </div>\n          <div className=\"outputScreen\"> {this.state.valNew} </div>\n          <div>\n        <button value='AC' onClick={this.cleanUp} style={{width:160, background: '#F55A3B'}}>AC</button>\n        <button value='/'  onClick={this.handleOperators} style={{background: '#F49753'}}>/</button>\n        <button value='x'  onClick={this.handleOperators} style={{background: '#F49753'}}>x</button>\n        <button value='7'  onClick={this.handleNumbers} >7</button>\n        <button value='8'  onClick={this.handleNumbers} >8</button>\n        <button value='9'  onClick={this.handleNumbers} >9</button>\n        <button value='‑'  onClick={this.handleOperators} style={{background: '#F49753'}}>-</button>\n        <button value='4'  onClick={this.handleNumbers} >4</button>\n        <button value='5'  onClick={this.handleNumbers} >5</button>\n        <button value='6'  onClick={this.handleNumbers} >6</button>\n        <button value='+'  onClick={this.handleOperators} style={{background: '#F49753'}}>+</button>\n        <button value='1'  onClick={this.handleNumbers} >1</button>\n        <button value='2'  onClick={this.handleNumbers} >2</button>\n        <button value='3'  onClick={this.handleNumbers} >3</button>\n        <button value='='  onClick={this.handleEvaluate} style={{background: '#8E42C3',position: 'absolute',height: 130, bottom: 5}}>=</button>\n        <button value='0'  onClick={this.handleNumbers} style={{width:160}}>0</button>\n        <button value='.'  onClick={this.handleDecimal} >.</button>     \n      </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default App;\n"],"sourceRoot":""}